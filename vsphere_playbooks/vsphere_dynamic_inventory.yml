---
- hosts: localhost
  gather_facts: false
  connection: local
  vars:
    - ansible_root: ~/ansible  #defines where your ansible_root folder resides
    - host_vars_dir: '{{ ansible_root }}/host_vars'  #defines where your ansible host_vars folder resides
    - pysphere_script_home: library
    - vsphere_dynamic_inventory: vsphere_inventory
#    - vcenter_hostname: ''  #defined in group_vars/all/configs or define here
#    - vcenter_pass: ''  #defined in group_vars/all/accounts or define here
#    - vcenter_user: ''  #defined in group_vars/all/accounts or define here
  tasks:
    - name: removing existing vsphere_dynamic_inventory
      file: path='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' state=absent
      run_once: true

    - name: creating vsphere_dynamic_inventory script
      template: src='{{ pysphere_script_home }}/vsphere_query.py.j2' dest='{{ pysphere_script_home }}/vsphere_query.py'

    - name: building vsphere_dynamic_inventory
      script: "{{ pysphere_script_home }}/vsphere_query.py --list >> {{ ansible_root }}/{{ vsphere_dynamic_inventory }}"

    - name: removing vsphere_dynamic_inventory script
      file: path='{{ pysphere_script_home }}/vsphere_query.py' state=absent

    - name: cleaning up vsphere_dynamic_inventory
      shell: "sed -i -e 's/^[ \t]*//' -e 's/[ \t]*$//' {{ ansible_root }}/{{ vsphere_dynamic_inventory }}"
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^"'
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp=',$'
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='"$'
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^\['
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^\]'
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^,$'
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^}'
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^{'
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      lineinfile: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^local' state=absent
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      lineinfile: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^127.0.0.1' state=absent
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      lineinfile: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^no_group' state=absent
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      lineinfile: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^hosts' state=absent
      run_once: true

    - name: cleaning up vsphere_dynamic_inventory
      replace: dest='{{ ansible_root }}/{{ vsphere_dynamic_inventory }}' regexp='^\s*$]'
      run_once: true

    - name: sorting vsphere_dynamic_inventory
      shell: "sort -u {{ ansible_root }}/{{ vsphere_dynamic_inventory }} > {{ ansible_root }}/{{ vsphere_dynamic_inventory }}.tmp"
      run_once: true

    - name: finalizing vsphere_dynamic_inventory
      shell: "mv {{ ansible_root }}/{{ vsphere_dynamic_inventory }}.tmp {{ ansible_root }}/{{ vsphere_dynamic_inventory }}"
      run_once: true

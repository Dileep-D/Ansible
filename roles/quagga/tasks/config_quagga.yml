---
- name: ensuring vlan package is installed
  apt: name=vlan state=present

- name: setting up sysctl network settings
  sysctl: name={{ item.name }} value={{ item.value }} state=present reload=yes
  with_items:
    - { name: "net.ipv4.ip_forward", value: "1" }
    - { name: "net.ipv4.conf.all.forwarding", value: "1" }
    - { name: "net.ipv4.conf.default.forwarding", value: "1" }
    - { name: "net.ipv4.tcp_tw_reuse" , value: "1" }
    - { name: "net.ipv4.ip_local_port_range" , value: "1024", "65023" }
    - { name: "net.ipv4.tcp_max_syn_backlog" , value: "40000" }
    - { name: "net.ipv4.tcp_max_tw_buckets" , value: "400000" }
    - { name: "net.ipv4.tcp_max_orphans" , value: "60000" }
    - { name: "net.ipv4.tcp_syncookies" , value: "1" }
    - { name: "net.ipv4.tcp_synack_retries" , value: "3" }
    - { name: "net.core.somaxconn" , value: "40000" }
    - { name: "net.ipv4.tcp_fin_timeout" , value: "5" }

- name: configuring interfaces and vlans with dhcp mgmt
  template: src=etc/network/interfaces_dhcp.j2 dest=/etc/network/interfaces owner=root group=root mode=0644 backup=yes
  with_items: vlan_config
  when: vlan_config and quagga_mgmt_method == "dhcp"

- name: configuring interfaces and vlans with static mgmt
  template: src=etc/network/interfaces_static.j2 dest=/etc/network/interfaces owner=root group=root mode=0644 backup=yes
  with_items: vlan_config
  when: vlan_config and quagga_mgmt_method == "static"

- name: Create the directory for interface cfg files
  file: path={{ net_config_dir }} state=directory
  when: ansible_os_family == "Debian"

- name: Create the network configuration file for ethernet devices
  template: src=etc/network/interfaces_split.j2 dest={{ net_config_dir }}/ifcfg-{{ item.vlan }}
  with_items: vlan_config
  when: vlan_config is defined
  register: ether_result

- name: reinitializing interfaces
  shell: ifdown {{ item.item.vlan }}; ifup {{ item.item.vlan }}
  with_items: ether_result.results
  when: vlan_config is defined and item.changed

- name: checking to see if /etc/quagga has already been moved       
  stat: path={{ quagga_backup_dir }}
  register: quagga_backup_moved

- name: moving existing /etc/quagga
  command: mv {{ quagga_home }} {{ quagga_backup_dir }}
  when: (quagga_backup_moved.stat.exists != true) and config_quagga and sync_quagga

- name: checking again if /etc/quagga has already been moved
  stat: path={{ quagga_backup_dir }}
  register: quagga_backup_stat

- name: touching file in quagga_backup_dir
  file: path={{ quagga_backup_dir }}/already_moved state=touch
  when: (quagga_backup_stat.stat.exists == true) and config_quagga and sync_quagga

- name: mounting gluster volumes - quagga
  mount: name={{ item.mountpoint }} src={{ item.src }} fstype={{ item.fstype }} opts={{ item.options }} state=mounted
  with_items:              
    - { mountpoint: '{{ quagga_home }}', src: '{{ primary_gfs_server }}:/{{ quagga_mnt }}', fstype: 'glusterfs', options: 'defaults,_netdev,backupvolfile-server={{ secondary_gfs_server }}' }
  when: (quagga_backup_stat.stat.exists == true) and config_quagga and sync_quagga

- name: configuring quagga
  template: src=etc/quagga/{{ item.src }} dest=/etc/quagga/{{ item.dest }} owner=root group=root mode=0644 backup=yes
  with_items:
    - { src: daemons.j2, dest: daemons }
    - { src: debian.conf.j2, dest: debian.conf }
    - { src: vtysh.conf.j2, dest: vtysh.conf }
    - { src: zebra.conf.j2, dest: zebra.conf }
    - { src: ospfd.conf.j2, dest: ospfd.conf }
  run_once: true
# when: sync_quagga

- name: setting permissions on files within /etc/quagga
  file: path=/etc/quagga/ owner=quagga group=quagga mode=0644 state=directory recurse=yes

- name: setting permissions on folder /etc/quagga
  file: path=/etc/quagga owner=quagga group=quaggavty mode=0775 state=directory


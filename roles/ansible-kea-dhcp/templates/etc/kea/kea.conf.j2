{

{% for item in kea_dhcp_configs %}
"{{ item.name }}":
{
  "interfaces-config": {
    "interfaces": [ {% for li in item.listen_interfaces %}"{{ li }}"{% if not loop.last %}, {% endif %}{% endfor %} ],
    "dhcp-socket-type": "{{ item.socket_type }}"
  },
  "lease-database": {
    "type": "{{ item.backend }}"
  },
  "expired-leases-processing": {
    "reclaim-timer-wait-time": {{ item.expired_leases_processing.reclaim_timer_wait_time }},
    "flush-reclaimed-timer-wait-time": {{ item.expired_leases_processing.flush_reclaimed_timer_wait_time }},
    "hold-reclaimed-time": {{ item.expired_leases_processing.hold_reclaimed_time }},
    "max-reclaim-leases": {{ item.expired_leases_processing.max_reclaim_leases }},
    "max-reclaim-time": {{ item.expired_leases_processing.max_reclaim_time }},
    "unwarned-reclaim-cycles": {{ item.expired_leases_processing.unwarned_reclaim_cycles }}
  },
  "valid-lifetime": {{ item.valid_lifetime }},
{%   for sub in item.subnets %}
  "{{ sub.name }}": [
{%     for pool in sub.pools %}
{%       if pool.reservations is not defined %}
    {
      "subnet": "{{ pool.subnet }}",
      "pools": [ { "pool": "{{ pool.range }}" } ]
    }{% if not loop.last %},{% endif %}

{%       elif pool.reservations is defined %}
    {
      "subnet": "{{ pool.subnet }}",
      "pools": [ { "pool": "{{ pool.range }}" } ],
      "reservations": [
{%         for rsv in pool.reservations %}
        {
          "hw-address": "{{ rsv.hw_address }}",
          "ip-address": "{{ rsv.ip_address }}"
        }{% if not loop.last %},{% endif %}

{%         endfor %}
      ]
    }{% if not loop.last %},{% endif %}
{%       endif %}

{%     endfor %}
{%   endfor %}
  ],
{%   if item.options is defined %}
  "option-data": [
{%     for option in item.options %}
    {
      "name": "{{ option.name }}",
      "code": {{ option.code }},
      "space": "dhcp4",
      "csv-format": {{ option.csv_format|lower }},
{%       if option.csv_format %}
      "data": "{{ option.data|join (', ') }}"
{%       elif not option.csv_format %}
      "data": "{{ option.data }}"
{%       endif %}
    }{% if not loop.last %},{% endif %}

{%     endfor %}
  ],
{%   endif %}
{%   if item.enable_ddns %}
  "dhcp-ddns": {
    "enable-updates": true,
    "qualifying-suffix": "{{ item.ddns.qualifying_suffix }}"
  }
{%   endif %}
},
{% endfor %}

# DHCPv6 configuration starts here.
"Dhcp6":
{
# Add names of interfaces to listen on.
  "interfaces-config": {
    "interfaces": [ ]
  },

# Use Memfile lease database backend to store leases in a CSV file.
  "lease-database": {
    "type": "memfile"
  },

# Setup reclamation of the expired leases and leases affinity.
# Expired leases will be reclaimed every 10 seconds. Every 25
# seconds reclaimed leases, which have expired more than 3600
# seconds ago, will be removed. The limits for leases reclamation
# are 100 leases or 250 ms for a single cycle. A warning message
# will be logged if there are still expired leases in the
# database after 5 consecutive reclamation cycles.
  "expired-leases-processing": {
    "reclaim-timer-wait-time": 10,
    "flush-reclaimed-timer-wait-time": 25,
    "hold-reclaimed-time": 3600,
    "max-reclaim-leases": 100,
    "max-reclaim-time": 250,
    "unwarned-reclaim-cycles": 5
  },

# Addresses will be assigned with preferred and valid lifetimes
# being 3000 and 4000, respectively. Client is told to start
# renewing after 1000 seconds. If the server does not respond
# after 2000 seconds since the lease was granted, client is supposed
# to start REBIND procedure (emergency renewal that allows switching
# to a different server).
  "preferred-lifetime": 3000,
  "valid-lifetime": 4000,
  "renew-timer": 1000,
  "rebind-timer": 2000,

# The following list defines subnets. Uncomment to enable them.
  "subnet6": [
#  {    "subnet": "2001:db8:1::/64",
#       "pools": [ { "pool": "2001:db8:1::/80" } ] },
#  {    "subnet": "2001:db8:2::/64",
#       "pools": [ { "pool": "2001:db8:2::/80" } ] },
#  {    "subnet": "2001:db8:3::/64",
#       "pools": [ { "pool": "2001:db8:3::/80" } ] },
#  {    "subnet": "2001:db8:4::/64",
#       "pools": [ { "pool": "2001:db8:4::/80" } ] }
   ]
},

# DHCP DDNS configuration starts here.
"DhcpDdns":
{
  "ip-address": "127.0.0.1",
  "port": 53001,
  "tsig-keys": [],
  "forward-ddns" : {},
  "reverse-ddns" : {}
},

# Logging configuration starts here. It tells Kea servers to store
# all log messages (on severity INFO or more) in a file.
# debuglevel variable is used on DEBUG level only.
"Logging":
{
  "loggers": [
    {
      "name": "kea-dhcp4",
      "output_options": [
          {
            "output": "/var/log/kea-dhcp4.log"
          }
      ],
      "severity": "INFO",
      "debuglevel": 0
    },
    {
      "name": "kea-dhcp6",
      "output_options": [
          {
            "output": "/var/log/kea-dhcp6.log"
          }
      ],
      "severity": "INFO",
      "debuglevel": 0
    },
    {
      "name": "kea-dhcp-ddns",
      "output_options": [
          {
            "output": "/var/log/kea-ddns.log"
          }
      ],
      "severity": "INFO",
      "debuglevel": 0
    }
  ]
}

}

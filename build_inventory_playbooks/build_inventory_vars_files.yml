---
- hosts: localhost
  connection: local
  gather_facts: false
  sudo: false
#  vars:
#    - group_vars_dir: /tmp/group_vars
#    - host_vars_dir: /tmp/host_vars
#    - inventory_group_vars_file: vars/group_vars.yml
#    - inventory_host_vars_file: vars/host_vars.yml
#    - timestamp: "{{ lookup('pipe', 'date +%D_%T') }}"
  vars_files:
    - vars/common_vars.yml
    - vars/group_vars.yml
    - vars/host_vars.yml
  tasks:
    - name: ensuring group_vars_dir exists
      file: path={{ group_vars_dir }} state=directory

    - name: ensuring group_vars/group_name exists
      stat: path='{{ group_vars_dir }}/{{ item }}'
      register: group_name_file
      with_items: host_groups

    - name: creating missing group_vars/group_name files
      file: path='{{ group_vars_dir }}/{{ item }}' state=touch
      with_items: host_groups
      when: not group_name_file.results[0].stat.exists

    - name: ensuring file is yaml format on missing group_vars/group_name files
      lineinfile: dest='{{ group_vars_dir }}/{{ item }}' line="---"
      with_items: host_groups
      when: not group_name_file.results[0].stat.exists

    - name: ensuring host_vars_dir exists
      file: path={{ host_vars_dir }} state=directory
      tags: [update_host_vars]

    - name: ensuring hosts_vars/host_name exists
      stat: path='{{ host_vars_dir }}/{{ item.name }}'
      register: host_name_file
      tags: [update_host_vars]
      with_items: "{{hosts}}"

    - name: creating missing host_vars/host_name files
      file: path='{{ host_vars_dir }}/{{ item.name }}' state=touch
      register: host_vars_created
      tags: [update_host_vars]
      with_items: "{{hosts}}"
      when: not host_name_file.results[0].stat.exists and item.create is defined and item.create

    - name: removing host_vars/host_name files ( create not defined )
      file: path='{{ host_vars_dir }}/{{ item.name }}' state=absent
      tags: [update_host_vars]
      with_items: "{{hosts}}"
      when: item.create is not defined

    - name: removing host_vars/host_name files ( not create )
      file: path='{{ host_vars_dir }}/{{ item.name }}' state=absent
      tags: [update_host_vars]
      with_items: "{{hosts}}"
      when: item.create is defined and not item.create

    - name: ensuring file is yaml format on missing host_vars/host_name files
      lineinfile: dest='{{ host_vars_dir }}/{{ item.name }}' line="---"
      tags: [update_host_vars]
      with_items: "{{hosts}}"
      when: not host_name_file.results[0].stat.exists and item.create is defined and item.create

    - name: adding created timestamp
      lineinfile: dest='{{ host_vars_dir }}/{{ item.name }}' regexp="^inventory_created_on" line="inventory_created_on{{ ':' }} {{ timestamp }}" state=present
      tags: [update_host_vars]
      with_items: "{{hosts}}"
      when: host_vars_created.changed and item.create is defined and item.create

    - name: adding custom host_vars variables
      lineinfile: dest='{{ host_vars_dir }}/{{ item.0.name }}' regexp="^{{ item.1.name }}" line="{{ item.1.name }}{{ ':' }} {{ item.1.value }}" state=present
      register: host_vars_added
      tags: [update_host_vars]
      with_subelements:
        - hosts
        - vars
      when: item[1] is defined and item[1].set and item[0].create is defined and item[0].create

    - name: updating timestamp on inventory
      lineinfile: dest='{{ host_vars_dir }}/{{ item.name }}' regexp="^inventory_updated_on" line="inventory_updated_on{{ ':' }} {{ timestamp }}" state=present
      tags: [update_host_vars]
      with_items: "{{hosts}}"
      when: host_vars_added.changed and item.create is defined and item.create

    - name: removing custom host_vars variables
      lineinfile: dest='{{ host_vars_dir }}/{{ item.0.name }}' regexp="^{{ item.1.name }}" line="{{ item.1.name }}{{ ':' }} {{ item.1.value }}" state=absent
      register: host_vars_removed
      tags: [update_host_vars]
      with_subelements:
        - hosts
        - vars
      when: item[1] is defined and not item[1].set and item[0].create is defined and item[0].create

    - name: updating timestamp on inventory
      lineinfile: dest='{{ host_vars_dir }}/{{ item.name }}' regexp="^inventory_updated_on" line="inventory_updated_on{{ ':' }} {{ timestamp }}" state=present
      tags: [update_host_vars]
      with_items: "{{hosts}}"
      when: host_vars_removed.changed and item.create is defined and item.create
